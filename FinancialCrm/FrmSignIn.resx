<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABnXSURBVHhe7Z1LjBVXescniywijRRlESuLmVWkrGIpi2gWkbLKIotYUUbKIlIeI80iUaREiRck
        o2QeiTUzmsyMiF9jbGwG2/g1cTAYBhvo9hiwjbHBxuBmeBlwu3k0uE3T0E/AqZzfqfrX/e7pr273vXRD
        VXcv/rr3flV16pzz/3+Pc2717S/88T/fs4JlDNe4guUD17iC5QPXuILlA9e4guUD17jUsPWRb/3ui/+9
        6u833r/qwU0P/Ou2gIFX1/7nuR3r7pvh9fVnV7/d/9R/bepb/4MHD2x59C/XPrn9N7x2liJc41IApAei
        74PsgEzY/NC/Za+svS/bse57Wf9TP8x+seFH2a5nV0fseeHBEojinU2PrvrojZ/9ptf+UoFrbDIK4vHy
        knRhyyPfisTvfPIHJfEi/M0XH87e3rgm2/fSYxHvbn48f7/psUmE8PRzO7/o3a/pcI1NxJqv338XIX7z
        g9+Y9sj/+aPfiZ6fki/iIRwc+Pl6F3tfenQYIWzfue9Xvfs3Fa6xadi25tt/EIg/5xEP8Hwb9i358nZI
        Pvjq09n7O57NDu14rg3Y97/yVDxn/7an3lxKacE1NgkUd1VeD8j5eL8N/R75Iv5w/8+ygV+8mB3ZtTGC
        99gkBEUDUo3Xn6bBNTYB/a+//ytFVe8SL+D9EoD1foV9eb4l/uiezdnxvVsjeA8kBImA2mD7uu/+qde3
        JsE1NgGBXCr86OEWlnzghX+b9wnteLfIh/ST777aBgmBc2wkQASkH69/TYFrrDPwfDxPBEM6JAupCKwA
        VPzZ8A+ZEoA8H9JPv9+fDR56Pb5KBAjERgGuJx281bf9y15fmwDXWGeQe23OlwAI84IVgRWAlwK6EYCN
        AkQOrqcd9gyaujpwjXUFkxxIbdvYARAO8RAtSAQ6piKwUw2g/A/hYHD/K+V77F4EoB3aYxfR63Pd4Rrr
        Cir+lHwL6+0A8q04qlYBNgqkRaA8H3taA1gB9G9Y/XkTU4FrrCPYiata6790/7+UsB4PeK8UwWdvH0BR
        AHLtakDgM3bAclF7AlYACKuJUcA11hGB6Fj1p8S/uHpV9vyP7s02fP8f4yvAxnFFBKAoUCUCmw4QQgrs
        8nyRz3VWALTdtP0B11g3UPlb75e3Q/pPvvG17Mf3/kWJB1b9VbQ98R9/F48jBqICYhD5kKUVgUSgmkBC
        kBhS0kW8wHVcLwE0LQq4xrqBtXbq9RAswvkMmRABCRAvQUgMRAaEwHGdKxJFqn3tRDZAOBIPoE0iDEL1
        xlBXuMY6Ae8PxJfhHwGIfIg+8/bGbPzUG9n4mX0RE4P7s9FT+2Lx9vL6H2Zr/v3rpVB4zzW0o5pAYti7
        Nd8OPtCX5/n4Pni9SBfhgGvSKFIKIIisSWnANdYNgbC49FPYl9dfOLwjJ18oBDB59oNs6vxAdvXc0ezC
        8Xey119a2xYxbIoAqhsgDxKp6PteeCgDvGf1AEgfAp8REJAQeF8I9T5vHHWEa6wTHnhix5eKSY0k4cWQ
        xxp9/OSu7NqJX8RXTwBTw8ciUiEgAglB7UkQEgM1AyQrzPMK8dhVXBJFVFyqBkBEoa/bvLHUEa6xTlD+
        t0Uf+VjkRwEE8ifO7M3JH3qvFMD0haOlCKY//SibGD6RjZw+GMP8xrXfjURDHp7O0o60cf7o3igYzgW6
        PiK0OfrJ4bgvILIFRQjE0aQ6wDXWCdr3V+5HBCO/fK1Fvuf95w7NEsDMxeNRBGBm5HQ2celMxMxIitPl
        eeX54VpAO7TJPagziAz0CwEoFRAR2Kr2xlJHuMY6Qbt/Cv94WfT+430dw39KvlCSGoieTb7AsXYhWAHQ
        vhUB/VMaQAB8bsqDpa6xTgiTGVcAEgBVefR+CWAe4T8lvyS1INoXAWiJQG2UIghRhnuOHt8dSVfNIAE0
        ZSXgGusEPfQhAbAxo/AvAcwn/FcLICH98qD5PEcUCILj3vSJNEAUQAgrAlhApAJgX74kv5vwf+lEO5kp
        +RBv4YhglgDC/bgvNQl9RAS8rghgAWEFQBF4aveGngRgyY9kWgGk5AuOACQCKwBg9gBWBLCQsAJgBcDO
        nxVAL/k/J3+2AK6PDpVoCeBM67oQRSQA7mEFwLbxigAWARKA9gHaBJAUgPPN/23kdxJAKYKKNFAUgkQg
        NqZWBLAICJMZVwEIgF06tn+rVgCVAuiU/0V0IoBSBJ0EEO4lAfCqFQBY8/iWu7zx1A2usU6w+wAIgGWX
        FUCZ/x0ByPt7EUBpn0MA3FciZIlKX9kI4kssbzx1g2usC5hEuxXMEiuGf08ARf7vWgBGBL0KIPYhiIAt
        YvrKXx2HYnX89J5nv++Nq05wjXUAD4B+tOeFf+Dv8fAoJhYPu3p0+6IJYBbKc+YWAAWp6gD6yWol4Kw3
        tjrBNdYB/J1+MYnx2XsmlgKwUgBd1wB+GmhDcbzt2g4CoD5hM0j9Dtjsja1OcI11wOC7L/+JJhLP4uHM
        q0e29SaAAEtiJHKuKFAea3l/vK6DAOgTm0JDe5+P/SaCeWOrE1zjnQa5/+gvT/56mMQbEgBfwy68ABIR
        uDDhP0SSNgGE+3Fv8j/9oW9jA1tKAex/58DveeOrE1xjXRAm8RATSein+vcEYJeBnTaC0jQQCZ1TALO9
        3wqg3AhKBECfA2qf/4FrrAuoohdfAFUiyI+1nV+QH0H4LwRAPySAK4c3RQGc3rVhgzemusE11gW2DogC
        CBNcigABdPguwBOBJbMktRTBbLSdV7RBe7HtCgFcPPC/sb9NyP/ANdYFBw8e+7UwmbEO0FNAbRGg+C7A
        E0DpqXMIQKgivjxuBTBcCEAF4GwBjFPDeGOqG1xjnRAmczMCiE8Ah8luE0BFCpgZPhJJAiIuFnDCCIR3
        AV2HiIp2qwRAAXjyrRcf8MZSR7jGOkFpID4FHCaaSY4iMBFgcvCdlgC0EiiIKkVgBWDhEQ6cc8s2iTDh
        PtwzRiCWgEGUpKco1sFTv+2NpY5wjXVDmNRDcROI/G8KQdUAVYWgFQHwSC3RgXhg24neX+R/7i3vpwBs
        SvEnuMa6gYIKzyK/zloJzDMKgEhmp2hQgbY2QnqR93PPtvz/3sY3qFu8MdQVrrGOCALYTH5lnZ0KABLK
        QtCIwNYCJYGqCaqEYI8HtF2fVP9t4T/0aejwnj/0+l5nuMY6gi+Hhj945WtXPtwyXpUG8EiJQFEAeEIQ
        UsJnka7z8Hzac7yffowNbPu4KV8BW7jGOmPsw62bvDTgiQBPnb5wOEJCEESqh/SYhGTJL72/CP+Xj+36
        sdffusM11hmsCmIaCCK4VkaB1zpHggAJwQpiPijPT8k33k9fmlT5W7jGOoMwOzaw9WAZBUwqmDi1O5s8
        86YfCc4dbBPAfBGJD9fTDu1p3R+9H/LD/YlKXl+bANdYZyAAaoGqKIAIIGjy42JlEDA1lAshisDAiwwi
        Pb4P58QowvVFW1Fg4R6l94f7N7H4E1xj3UFBOHr45QsxCnQSQSDLiqBKCB5i5LDkI6iCfO5Ten+IRl4f
        mwLXWHcQBUYPb1mVRoFKESTRQKgi3p4zm/xW6OfeRCOvj02Ba2wC+Ml2loRdiaBCCB50HtfShshv9/5t
        Hzf1F0IF19gEEAVYekkAqQi0PIQ4EEXgCMGFzulAPvcjCnl9axJcY1OQRgGImR0JXitFUEaDVAwWxTER
        n5Oft2PJv/jexstN2/b14BqbBNUCbanAEYGNBhaWcEs6sF5vyede/Mma15+mwTU2CVoRWBGkQmiJIBdC
        lRgEEe+RD/hiir9Y8vrTNLjGpoEHMPgqtpMIZguhM3QN11vyuc+2DauzpfDfQoBrbBr0dXFHERghVInB
        Hi+JB6EdtcufgfOrYkvln0u6xqaB7wcghecFPBHMEoJFQXYKe63ao31+fZS/VGriN38eXGPTwGqA3/7j
        F7sQgOAJAXiEAxvqga4HtMePQPFjk/zrOK8fTYRrbCL4kUeiAD/Y5IlAsARXIb2GdhAXuR+hNemhz7ng
        GpuIC8f2vQU5hGilgk5CmAv2GuoLflmUXxPl38c05Zn/+cA1NhEIgH/wxK9+Ewn4Q5JUBIIlWvDOIRrw
        GBrkE/qJMvwjqabv/1u4xibi0kcHnuUHofFQyIoiOLUvfrnDup5ir6zqLUzIjynAHJPn0x5/nQz5/JYw
        RafXhybCNTYRfC/AXxBLBEQC0gFhmz8qiQ+Kns8f6Ewf8NATPghFxPPz75Z8ogvk036Tv/9P4RqbiNPH
        j36TX/mWCCCMmoBIAJHPP/TN+BMz+llX/eYQr3zmRx45R6DgQ0T87AttDQ28Gdu9dPJAI/7se75wjU0E
        EWBi+ET8qXdEAFGQRt5GCHgypEoMKbATMRAMxHONcr48nzZjuysRoH6gBkAAVgT8bwDIw4PxZEiFXNUI
        Ftg4xr+KIeSTRjzywUoNUEOwCrACsCIgEiACPJr//UddANkW2DiGUDqRT3srq4AaYmzoyDn+jDsVgaIA
        hEIs3m3/+SPgvTwfkcwlAOoNrw9NhGtsGngmP5LPfwFxBACJngAsuhEA0cbrRxPhGpuGs2cv/hM/69Jt
        BOhVALw25Qcg5oJrbBLw/ktnzwzyyx6KACI/LQQht5MA+F8E8xFAxMjY5uHhK7/v9alJcI1NAV54fnh0
        ZPjSmBv+PQFAckq+FYBXBFoR0N7FwRPZyGfXsk9HrmZNF4FrbALw/AsXRx+FhNErE9nIxWFXAJDmrQI8
        AdhVAOdr8ycVwGej17Kr1yazK1cnsrFrU7ubLALXWFfwFO7Ytcm/IfwOnfssGxwaiV549dpUdvnKeIwC
        It8KQPkfcqsEACQAhCIBpGkAoV25OhnvifB4Pzk5k01MzhyiFjl7/vJveX2vK1xjnRD/FjB4GN5OuD93
        4XIWXjPCPrj46VhJCJ6pCGDD/1wFoMCxqkIQ5ORPZNcmpuI9EcD09PVscvpGNjUVXoMQ6AMC/eTcZ/c0
        4akh13gnwaQBPAmPCoSfgHQwfPFKJJxJhgiA54NcBJN5JAgi8MI/OX4uAdg6wKYBkY/QdJ/JqZlsZuZG
        iSiGYAPjE9PZ2NXJS9fGp75X5z8dd413ApDOI954Dh5EeLfEE+oh3pIN8EJEwXHZVRMQAeYb/gWbBriW
        gi8XXB5leI3kB2+/fv1mwI0SUQQz1yMkBEDEoFYgfdXtj0lc4+2C9fZPzn72Hbwd4snvEB9DfeH1IIb9
        8Bk755wevJSdOD2cHTt5Pr7nGOQjAojCYxHG0MmB6MmQ6pEOFP6j14fzEVBLbC3i5fk5+RbtQmgXgwRx
        nchweXRs8rG6FI6ucTEh0q23Q56IT8nXq94L6TEEwtIMghBBuxDyqKCUgUcDxKHIomvy8/JIomtFPDaI
        zYlOBSDoWLsg8vTQEkNMETWICq5xMSDSWbsrt1viRWZKZE7GVAyjTBog/GoyKb6E6aIYsx7bIjVvK/2c
        Q59bIhDpOfFTsd2c/JTwaigSSADqp1JDHEcAUYFagUjIPHnzt1hwjQsNG+aPnjg/AfEiP+b4ENohPc+1
        OTGzCI+kz5STCNmgNcE5+Uy0PsvTJIiUcCsQ+x5P133VvkfwXJiZaYmAfqWwIgBRgCE9UDTeLiG4xoUE
        g/ngw8EHIZ58nRJPCNbkQ468XQKwE5R7TrUAOO6RZc+xBLTENLs9r51uYNuxiMSH++jeZVow42Tct2ur
        2TUuFAj1EH/k+NlYrEE+4V6hHo+HfHkm5DN4CzsxLfJzwtKJBbz3CLldyL3eF4BEJuQCMOMLsGPmPRFh
        MWsE13iroMMDx85u/2BgMAOq0m24T73ewhVABfGa7DqQDzoJAM8X6G+b9+vVwcTkzJHF2ktwjbcCkb/v
        vVP/B/B+yKfII9xDvnKtBGBFMIv8gngmrTWZ7ZOeC6MeAhDUT/XZkh8h8tuQE27nQLg6Pn1mMbaZXWOv
        oHCx5OP9hH48X14v5OQLCKBV+OW5fiYntlhLg5zgduTr7Pz89FgdQJ/tGCRW9VmYmJouoXmwhTAgEiz0
        cwiusVfwqJQln9BPziffi3ArgJYIWvmfydAkAXlQFTSZ8zn3TiLP+/mYYu63IT6QbokWbDEMOJfi0Jv7
        XuEaewEVa0o+1T4FH6EfsiGZ1zQKeOR7k+hBHuQdqyM0vtjvQgAiuBOsENg88jjoBa6xF4Rqf39KPnnf
        buxod00CyMkv1tw9eLEmstvr7jRKEcxDAIoCSTS4vFCpwDV2C7Z0IV7kq+jTOr+1yZOH+lb4z/M+k9AL
        iZrIXq6904gCKFKBJdyCuUqhY+wcelx0C9fYDdje1ZJPFX9c7hVr/U8D+QhA1T+DgHi9ZzBxIkKO9Caq
        E5pKPugkAEt4C+3LZb5qZu49TrqBa5wvtMVrN3uU9yP5wfsjCgEQBTQQRJCTv/y8X6gSgSXaQhFUWIiH
        TlzjfIEC2e2D/LbNHkcAEgF5XwPtNfSDppMPiHpRBEYAlmALyE/BLiEc3IoIXON8oG/2KP6s99vc34ZC
        BIR+kQ/yrV0mojtwXa/X1glaElaR3056awMNkAbYeLsjAuDG/Jl08PwbeP+pjy9+nn6tK1ghkAYYbB7+
        8iWcvLkb9Hpd3dAuAEK8JbxFvKAVFEAEpIFbiQKucS5wM7yfjR8v/KcCsCKQAAiB3oQsN6QC6EQ+hFsB
        RBEUXxbdVgFww7f6tn+Z8A/5NvwrBQBPANQBhDYEwFYpk6BIsFS8uhvYInC2AFrECyIeRwKkAZyx1xWB
        a+wEeT8/kqDwj/fb8B9RIYJcAHq06ma5l88ELEcBAMbNfki7AGaTb0UgAfD+VtKAa+wEbsTSj4c8rPcT
        /ucSgETAwBi4vjXTBCxbAYQI0C4An/zU+4VbSQOusRNU/FWGfwnACCEVAINh4Ddu8tVpLgAGzySkk7PU
        YVPAfMi3AtDeyq2kAddYBW7AjfbuP/lnXvh3BVCIQEJAAAyCQeu7cwohLXmw83m5QAJA/Iy/E/EWVgB8
        VhrweOsE11gFbkDxR/i31f+s/J/CEQCKh/ybNz+PaQAByO5N1FKFvF8OMB/ygY0CfOZP53pJA67RAw3b
        8G83f2blfw9GBFoJEP4RAEJgEtgows6kRM9YDjACSMkXyR6YQ8Cc8ZknhhZVADb8s/c/7/CfIEaB0GnU
        zgogrwNuxociVB/kAlgmKATAfHgenkLEi3xesXM9z2R0mwZcowca1iPeXYV/B4ggEh0mAAEAwiEC4JhW
        BEsegXyEn1f/1VW+YMm34BquhxuigMdfFVyjBxr+yfr+P3rjnRMfpg99eCR3AiQzIAYP+aoDsCEo1Mwx
        d9KWEPQoGALoRL5HOuCYyKeNkIpPPPDEji91kwZcYwoaJPz/z9Z3//z9wx+PWwEorwOPbA+cywDwdAmA
        eoCB0CbHlosA8urfz/mWbAsRb8lHSIAabVEE8PRzO7+IAPp2D5wmBSj8IwB1jBAeiz2H9BSci6erEEQI
        TIaiCoOJtcASRu79vgAs4RY63iK/KJoDKM4f/mn/3QsuAEAN8PBP+76y9pldz+zZd/wS3/5BFETaDiqP
        Q7LSg00Tes85DILNEAQAGASiQlxlGigGt9Qgj1X4F+nMH8VdfE0gAXC+9XpEQGH+yJOvfXvN41vuWhQB
        KA0EEXz18Wd2bXrupbeHeAg0iiB0LB2EFYEHRQ4mQwJADFzD8pJjDC6duKUCkYfQ28g3YA71XuTL63Ut
        xAcujj+y/rXVOOiirQIAjaMwRMAN1z23+22EsPfAR2OQSiclBEQhEXhCwMbA0jqANqgv2FtYKgIQ2fY9
        wItZDVnymTMLbMwn5ynf855ajLkPzrgTz4d80nQ33g9cYydwA/5nHjd8eH3/3z624fXH6ISEQPjW+jSG
        sgANRmIQsNk6gP0APtOG0oAmLp1MC3t8LnjX94pu28VzBcZmydccCSIehxL5OA5zjMdH4nOv/+r9T+z4
        nV7IB65xLnAjogFLjiiEdX1/TWdIDTYqUCdoMFEMvCaDZZCqA4gETBTnUAso1zFhRAoLz8a1qa0KOteS
        kp5jj3vHBPUxf7VP9eTEAcZiwbghX/OguZHz6DiREG/fsvPgKeaWGuyhdX33QjwFHxEZLnohH7jG+YKb
        sj9AJ1Ah+wR0zoqBjksMKDgdMANlEvF+7QgyYdiBN3H2dT5QW/baTjbvuip450GcPBtovBq7nQPvM9GP
        OWPu8HRIj2E+OBpzzFwThW+FeME1dgtFBMJQHhX676ajMTKEjitNPLNx7wcMilUExYuWfAyaicu9RV4k
        72t5E6FQE2wnF5BSVF8IeA+RRK8e6EP63tpS0FYnpH0Aaeqz4JpQ89xgTuTlOA9O1PL0vq9AOo7GHC8E
        8YJrvBVYMSgyxDTBQELNgCAYHKpGFJtfff8AewtMAKGOycADNJlxoorNJpEuD7OeFkXAHkSxD8G1IgXi
        IBWoviAisdqoAsd1rqA2hFQcFrqvwPmMjTEyVsbM2CEbB2FeIuGFl+NEOBOeTpRdSNItXONCgQ6nglCE
        KEURBhzTRhEpCmHE9MEE4RUSCGHR7ETyPEJ8JsESx2eBDasUXNsN0uvVtrlX7AcRjb7RRxFM3wuSYxiP
        RAfxx3AenIHx52TnHi7CrZcvBukWrnGxYAUhUTBgBp5HilwYxaREcTBREgiTxyRaoRTYCRANaSYFVXMF
        hgp4x457bRUhOt6Pe9OPNnILguXNIjklGmewZN8uwlO4xtsJDToVhsShqMHEWZFIKGZyyZW5aArhpICU
        +WLW9Wq3uI8lNQf96r9bBMubRbLC+J0iugqusS6w4gCaQEFCkVgERGMhQuYDnZ+2ASyhgiUWpH32xlUn
        uMYmIyWgCiLLI60TvHs2F/d84f8BHXnAe8LXvGYAAAAASUVORK5CYII=
</value>
  </data>
</root>